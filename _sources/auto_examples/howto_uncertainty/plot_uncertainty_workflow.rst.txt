
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/howto_uncertainty/plot_uncertainty_workflow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_howto_uncertainty_plot_uncertainty_workflow.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_howto_uncertainty_plot_uncertainty_workflow.py:


Example for uncertain variables collection
==========================================

.. sectionauthor:: Max JÃ¤schke (HTWK Leipzig)

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Import the needed packages and the distributions from scipy.stats

.. GENERATED FROM PYTHON SOURCE LINES 11-24

.. code-block:: Python


    from pathlib import Path
    from tempfile import mkdtemp

    import matplotlib.pyplot as plt
    import numpy as np
    from scipy.stats import norm, skewnorm

    from easyquart.uncertainty import (
        UncertainVariable,
        UncertainVariableCollection,
    )








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Create a collection of uncertain variables and add variables

.. GENERATED FROM PYTHON SOURCE LINES 26-67

.. code-block:: Python


    collection = UncertainVariableCollection()

    collection.add_variable(
        UncertainVariable(
            name="Soil Conductivity",
            distribution=skewnorm(loc=2, scale=1, a=1.5),
            unit=r"$\lambda$ in W/m*K",
            description="skewnorm distribution of the soil conductivity",
        )
    )

    collection.add_variable(
        UncertainVariable(
            name="Geothermal Heat Flux",
            distribution=norm(loc=0.078, scale=0.014),
            unit=r"$\dot{q}$ in $W/m^2$",
            description="geothermal heat flux from the earth",
        )
    )

    collection.add_variable(
        UncertainVariable(
            name="Soil Volumetric Heat Capacity",
            distribution=norm(loc=2e6, scale=0.45e6),
            unit=r"$\rho \cdot c_p$ in J/kg*K",
            description="volumetric heat capacity of the soil",
        )
    )

    collection.add_variable(
        UncertainVariable(
            name="Grout Conductivity",
            distribution=skewnorm(loc=1.5, scale=0.8, a=3),
            unit=r"$\lambda$ in W/m*K",
            description="skewnorm distribution of the grout conductivity",
        )
    )

    print(collection.list_variables())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['Soil Conductivity', 'Geothermal Heat Flux', 'Soil Volumetric Heat Capacity', 'Grout Conductivity']




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Save the collection as a json-file

.. GENERATED FROM PYTHON SOURCE LINES 69-74

.. code-block:: Python


    tmp_dir = Path(mkdtemp())
    json_file = tmp_dir / "uncertain_variables.json"
    collection.to_json(json_file)








.. GENERATED FROM PYTHON SOURCE LINES 75-76

Load the variables from the json to a new uncertain variable collection

.. GENERATED FROM PYTHON SOURCE LINES 76-82

.. code-block:: Python

    uncertain_variables = UncertainVariableCollection()
    uncertain_variables.from_json(json_file)

    all_variables = uncertain_variables.list_variables()
    print(all_variables)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['Soil Conductivity', 'Geothermal Heat Flux', 'Soil Volumetric Heat Capacity', 'Grout Conductivity']




.. GENERATED FROM PYTHON SOURCE LINES 83-84

Plot the distributions

.. GENERATED FROM PYTHON SOURCE LINES 84-98

.. code-block:: Python

    fig, ax = plt.subplots(2, 2, figsize=(10, 6), constrained_layout=True)

    for i, var in enumerate(all_variables):
        variable = uncertain_variables.get_variable(var)
        x_min, x_max = variable.distribution.ppf([0.00001, 0.99999])
        x = np.linspace(x_min, x_max, 10000)
        ax[i % 2, int(i / 2)].plot(x, variable.distribution.pdf(x))
        ax[i % 2, int(i / 2)].set_title(var)
        ax[i % 2, int(i / 2)].set_xlabel(variable.unit)
        ax[i % 2, int(i / 2)].set_ylabel(r"$f_p (x)$")
        ax[i % 2, int(i / 2)].grid(True, alpha=0.3)

    fig.show()




.. image-sg:: /auto_examples/howto_uncertainty/images/sphx_glr_plot_uncertainty_workflow_001.png
   :alt: Soil Conductivity, Soil Volumetric Heat Capacity, Geothermal Heat Flux, Grout Conductivity
   :srcset: /auto_examples/howto_uncertainty/images/sphx_glr_plot_uncertainty_workflow_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 99-100

Perform the sampling and add the sample points to the distribution plot

.. GENERATED FROM PYTHON SOURCE LINES 100-125

.. code-block:: Python

    uncertain_variables.latin_hypercube_sampling(n_samples=5)

    fig, ax = plt.subplots(2, 2, figsize=(10, 6), constrained_layout=True)
    for i, var in enumerate(all_variables):
        variable = uncertain_variables.get_variable(var)
        x_min, x_max = variable.distribution.ppf([0.00001, 0.99999])
        x = np.linspace(x_min, x_max, 10000)
        ax[i % 2, int(i / 2)].plot(x, variable.distribution.pdf(x))
        ax[i % 2, int(i / 2)].set_title(var)
        ax[i % 2, int(i / 2)].set_xlabel(variable.unit)
        ax[i % 2, int(i / 2)].set_ylabel(r"$f_p (x)$")
        ax[i % 2, int(i / 2)].grid(True, alpha=0.3)
        variable = uncertain_variables.get_variable(var)
        ax[i % 2, int(i / 2)].scatter(
            variable.samples, variable.distribution.pdf(variable.samples), color="r"
        )
        for j, sample in enumerate(variable.samples):
            shiftx = 0.90 if sample < variable.distribution.mean() else 1.02
            shifty = 1.02
            ax[i % 2, int(i / 2)].annotate(
                f"{j}",
                (sample * shiftx, variable.distribution.pdf(sample) * shifty),
            )

    fig.show()



.. image-sg:: /auto_examples/howto_uncertainty/images/sphx_glr_plot_uncertainty_workflow_002.png
   :alt: Soil Conductivity, Soil Volumetric Heat Capacity, Geothermal Heat Flux, Grout Conductivity
   :srcset: /auto_examples/howto_uncertainty/images/sphx_glr_plot_uncertainty_workflow_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.404 seconds)


.. _sphx_glr_download_auto_examples_howto_uncertainty_plot_uncertainty_workflow.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_uncertainty_workflow.ipynb <plot_uncertainty_workflow.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_uncertainty_workflow.py <plot_uncertainty_workflow.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_uncertainty_workflow.zip <plot_uncertainty_workflow.zip>`
