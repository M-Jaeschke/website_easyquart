
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/howto_optimization/problem_definition.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_howto_optimization_problem_definition.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_howto_optimization_problem_definition.py:


Defining the optimization problem.
==================================

.. sectionauthor: Pauline Werner (HTWK Leipzig)

First, some minimal example usage:

.. GENERATED FROM PYTHON SOURCE LINES 11-12

Import the Area class and the shapely Polygon function

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: Python

    from shapely.geometry import Polygon

    from easyquart.bhe_optimization.core.area import Area
    from easyquart.bhe_optimization.core.obstacle import House, Tree


.. GENERATED FROM PYTHON SOURCE LINES 18-19

Defining the area as a shapely Polygon with a buffer

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: Python

    area_polygon = Polygon([(0, 0), (5, 0), (5, 6), (0, 6)])
    d_buffer = 0.5  # Shrinking buffer of 0.5 meters


.. GENERATED FROM PYTHON SOURCE LINES 23-24

Creating obstacles directly as instances of House, Tree, or Undefined

.. GENERATED FROM PYTHON SOURCE LINES 24-28

.. code-block:: Python

    obstacles = [
        House(Polygon([(3, 4), (5, 4), (5, 6), (3, 6)])),  # A house obstacle
    ]


.. GENERATED FROM PYTHON SOURCE LINES 29-30

Create an Area instance with obstacles

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: Python

    area = Area(area_polygon, d_buffer, obstacles)


.. GENERATED FROM PYTHON SOURCE LINES 33-34

Print the original and buffered polygon

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: Python

    print(f"Original polygon: {area.polygon}")
    print(f"Buffered (shrunk) polygon: {area.buffered_polygon()}")


.. GENERATED FROM PYTHON SOURCE LINES 38-39

Demonstration: Adding an obstacle using append()

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    new_tree = Tree(Polygon([(1, 1), (2, 1), (2, 2), (1, 2)]))
    area.obstacles.append(new_tree)
    print(f"After adding an obstacle: {area}")


.. GENERATED FROM PYTHON SOURCE LINES 44-45

Demonstration: Removing an obstacle using remove()

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: Python

    area.obstacles.remove(new_tree)
    print(f"After removing an obstacle: {area}")


.. GENERATED FROM PYTHON SOURCE LINES 49-50

Export to JSON

.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: Python

    area.to_json("data/area.json")


.. GENERATED FROM PYTHON SOURCE LINES 53-54

Print the Area instance

.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: Python

    print(area)


.. GENERATED FROM PYTHON SOURCE LINES 57-58

Load an Area instance from JSON

.. GENERATED FROM PYTHON SOURCE LINES 58-61

.. code-block:: Python

    loaded_area = Area.from_json("data/area.json")
    print(f"Loaded from JSON: {loaded_area}")
    print(f"Loaded buffered (shrunk) polygon: {loaded_area.buffered_polygon()}")


.. _sphx_glr_download_auto_examples_howto_optimization_problem_definition.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: problem_definition.ipynb <problem_definition.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: problem_definition.py <problem_definition.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: problem_definition.zip <problem_definition.zip>`
